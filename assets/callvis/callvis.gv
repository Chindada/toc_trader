digraph gocallvis {
    label="gitlab.tocraw.com/root/toc_trader/cmd/toc_trader";
    labeljust="l";
    fontname="Arial";
    fontsize="14";
    rankdir="LR";
    bgcolor="lightgray";
    style="solid";
    penwidth="0.5";
    pad="0.0";
    nodesep="0.35";

    node [shape="ellipse" style="filled" fillcolor="honeydew" fontname="Verdana" penwidth="1.0" margin="0.05,0.0"];
    edge [minlen="2"]

    subgraph "cluster_focus" {
        labeljust="c";
fontsize="18";
bgcolor="#e6ecfa";
label="tradebot";
labelloc="t";
        
        "(*gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.tradeRecordMutexStruct).Set" [ fillcolor="lightblue" label="(*tradeRecordMutexStruct).Set" penwidth="1.5" ]
        "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.BuyBot" [ fillcolor="lightblue" label="BuyBot" penwidth="1.5" ]
        "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.IsBuyPoint" [ fillcolor="lightblue" label="IsBuyPoint" penwidth="1.5" ]
        "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.GetStockBuyCost" [ fillcolor="lightblue" label="GetStockBuyCost" penwidth="1.5" ]
        "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.PlaceOrder" [ fillcolor="lightblue" label="PlaceOrder" penwidth="1.5" ]
        "(*gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.tradeRecordMutexStruct).CheckStockExist" [ fillcolor="lightblue" label="(*tradeRecordMutexStruct).CheckStockExist" penwidth="1.5" ]
        "(*gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.tradeRecordMutexStruct).GetCount" [ label="(*tradeRecordMutexStruct).GetCount" penwidth="1.5" fillcolor="lightblue" ]
        "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.CheckBuyOrderStatus" [ fillcolor="lightblue" label="CheckBuyOrderStatus" penwidth="1.5" ]
        "(*gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.tradeRecordMutexStruct).Delete" [ penwidth="1.5" fillcolor="lightblue" label="(*tradeRecordMutexStruct).Delete" ]
        "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.Cancel" [ fillcolor="lightblue" label="Cancel" penwidth="1.5" ]
        "(*gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.tradeRecordMutexStruct).GetOrderID" [ penwidth="1.5" fillcolor="lightblue" label="(*tradeRecordMutexStruct).GetOrderID" ]
        "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.SellBot" [ fillcolor="lightblue" label="SellBot" penwidth="1.5" ]
        "(*gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.tradeRecordMutexStruct).GetClose" [ label="(*tradeRecordMutexStruct).GetClose" penwidth="1.5" fillcolor="lightblue" ]
        "(*gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.tradeRecordMutexStruct).GetTradeTime" [ fillcolor="lightblue" label="(*tradeRecordMutexStruct).GetTradeTime" penwidth="1.5" ]
        "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.GetSellPrice" [ penwidth="1.5" fillcolor="lightblue" label="GetSellPrice" ]
        "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.CheckSellOrderStatus" [ label="CheckSellOrderStatus" penwidth="1.5" fillcolor="lightblue" ]
        "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.GetStockSellCost" [ fillcolor="lightblue" label="GetStockSellCost" penwidth="1.5" ]
        "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.ShowStatus" [ label="ShowStatus" penwidth="1.5" fillcolor="lightblue" ]
        "(*gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.tradeRecordMutexStruct).GetTotalSellCost" [ fillcolor="lightblue" label="(*tradeRecordMutexStruct).GetTotalSellCost" penwidth="1.5" ]
        "(*gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.tradeRecordMutexStruct).GetTotalBuyCost" [ fillcolor="lightblue" label="(*tradeRecordMutexStruct).GetTotalBuyCost" penwidth="1.5" ]
        "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.CheckOrderStatusLoop" [ fillcolor="lightblue" label="CheckOrderStatusLoop" penwidth="1.5" ]
        "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.FetchOrderStatus" [ fillcolor="lightblue" label="FetchOrderStatus" penwidth="1.5" ]
        "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.InitStartUpQuota" [ fillcolor="lightblue" label="InitStartUpQuota" penwidth="1.5" ]
        "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.initBalance" [ fillcolor="lightblue" label="initBalance" penwidth="0.5" ]
        "(*gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.tradeRecordMutexStruct).GetAll" [ fillcolor="lightblue" label="(*tradeRecordMutexStruct).GetAll" penwidth="1.5" ]
        
        subgraph "cluster_errors" {
        fillcolor="lightyellow";
penwidth="0.8";
style="filled";
fontname="Tahoma bold";
rank="sink";
label="errors";
URL="/?f=errors";
tooltip="package: errors";
fontsize="16";
        
        "errors.New" [ fillcolor="moccasin" label="New" penwidth="1.5" ]
        
    }

        subgraph "cluster_github.com/go-resty/resty/v2" {
        fillcolor="lightyellow";
rank="sink";
tooltip="package: github.com/go-resty/resty/v2";
penwidth="0.8";
fontsize="16";
style="filled";
fontname="Tahoma bold";
label="resty";
URL="/?f=github.com/go-resty/resty/v2";
        
        "(*github.com/go-resty/resty/v2.Client).R" [ fillcolor="moccasin" label="(*Client).R" penwidth="1.5" ]
        "(*github.com/go-resty/resty/v2.Request).SetBody" [ label="(*Request).SetBody" penwidth="1.5" fillcolor="moccasin" ]
        "(*github.com/go-resty/resty/v2.Request).SetResult" [ fillcolor="moccasin" label="(*Request).SetResult" penwidth="1.5" ]
        "(*github.com/go-resty/resty/v2.Request).Post" [ fillcolor="moccasin" label="(*Request).Post" penwidth="1.5" ]
        "(*github.com/go-resty/resty/v2.Response).StatusCode" [ label="(*Response).StatusCode" penwidth="1.5" fillcolor="moccasin" ]
        "(*github.com/go-resty/resty/v2.Response).Result" [ penwidth="1.5" fillcolor="moccasin" label="(*Response).Result" ]
        "(*github.com/go-resty/resty/v2.Request).Get" [ fillcolor="moccasin" label="(*Request).Get" penwidth="1.5" ]
        
    }

        subgraph "cluster_github.com/sirupsen/logrus" {
        penwidth="0.8";
fillcolor="lightyellow";
fontname="Tahoma bold";
label="logrus";
fontsize="16";
style="filled";
rank="sink";
URL="/?f=github.com/sirupsen/logrus";
tooltip="package: github.com/sirupsen/logrus";
        
        "(*github.com/sirupsen/logrus.Logger).WithFields" [ penwidth="1.5" fillcolor="moccasin" label="(*Logger).WithFields" ]
        "(*github.com/sirupsen/logrus.Entry).Error" [ fillcolor="moccasin" label="(*Entry).Error" penwidth="1.5" ]
        "(*github.com/sirupsen/logrus.Logger).Warn" [ fillcolor="moccasin" label="(*Logger).Warn" penwidth="1.5" ]
        "(*github.com/sirupsen/logrus.Logger).Error" [ label="(*Logger).Error" penwidth="1.5" fillcolor="moccasin" ]
        "(*github.com/sirupsen/logrus.Entry).Info" [ label="(*Entry).Info" penwidth="1.5" fillcolor="moccasin" ]
        "(*github.com/sirupsen/logrus.Entry).Infof" [ label="(*Entry).Infof" penwidth="1.5" fillcolor="moccasin" ]
        "(*github.com/sirupsen/logrus.Logger).Infof" [ fillcolor="moccasin" label="(*Logger).Infof" penwidth="1.5" ]
        "(*github.com/sirupsen/logrus.Entry).Warn" [ penwidth="1.5" fillcolor="moccasin" label="(*Entry).Warn" ]
        
    }

        subgraph "cluster_gitlab.tocraw.com/root/toc_trader/pkg/core" {
        fontsize="16";
style="filled";
rank="sink";
URL="/?f=gitlab.tocraw.com/root/toc_trader/pkg/core";
tooltip="package: gitlab.tocraw.com/root/toc_trader/pkg/core";
penwidth="0.8";
fillcolor="lightyellow";
fontname="Tahoma bold";
label="core";
        
        "gitlab.tocraw.com/root/toc_trader/pkg/core.TradeProcess" [ fillcolor="moccasin" label="TradeProcess" penwidth="1.5" ]
        
    }

        subgraph "cluster_gitlab.tocraw.com/root/toc_trader/pkg/global" {
        fontsize="16";
style="filled";
fillcolor="lightyellow";
fontname="Tahoma bold";
URL="/?f=gitlab.tocraw.com/root/toc_trader/pkg/global";
penwidth="0.8";
label="global";
tooltip="package: gitlab.tocraw.com/root/toc_trader/pkg/global";
rank="sink";
        
        "(*gitlab.tocraw.com/root/toc_trader/pkg/global.stringStringMutex).GetName" [ label="(*stringStringMutex).GetName" penwidth="1.5" fillcolor="moccasin" ]
        
    }

        subgraph "cluster_gitlab.tocraw.com/root/toc_trader/pkg/handlers/tradebothandler" {
        label="tradebothandler";
tooltip="package: gitlab.tocraw.com/root/toc_trader/pkg/handlers/tradebothandler";
penwidth="0.8";
fillcolor="lightyellow";
fontname="Tahoma bold";
URL="/?f=gitlab.tocraw.com/root/toc_trader/pkg/handlers/tradebothandler";
fontsize="16";
style="filled";
rank="sink";
        
        "gitlab.tocraw.com/root/toc_trader/pkg/handlers/tradebothandler.ManualSellStock" [ fillcolor="moccasin" label="ManualSellStock" penwidth="1.5" ]
        
    }

        subgraph "cluster_gitlab.tocraw.com/root/toc_trader/pkg/models/traderecord" {
        style="filled";
rank="sink";
URL="/?f=gitlab.tocraw.com/root/toc_trader/pkg/models/traderecord";
fontsize="16";
fillcolor="lightyellow";
fontname="Tahoma bold";
label="traderecord";
tooltip="package: gitlab.tocraw.com/root/toc_trader/pkg/models/traderecord";
penwidth="0.8";
        
        "gitlab.tocraw.com/root/toc_trader/pkg/models/traderecord.GetOrderByOrderID" [ fillcolor="moccasin" label="GetOrderByOrderID" penwidth="1.5" ]
        "gitlab.tocraw.com/root/toc_trader/pkg/models/traderecord.CheckIsFilledByOrderID" [ fillcolor="moccasin" label="CheckIsFilledByOrderID" penwidth="1.5" ]
        "gitlab.tocraw.com/root/toc_trader/pkg/models/traderecord.GetAllorderByDayTime" [ fillcolor="moccasin" label="GetAllorderByDayTime" penwidth="1.5" ]
        
    }

        subgraph "cluster_gitlab.tocraw.com/root/toc_trader/pkg/modules/simulate" {
        rank="sink";
URL="/?f=gitlab.tocraw.com/root/toc_trader/pkg/modules/simulate";
fontname="Tahoma bold";
fontsize="16";
style="filled";
fillcolor="lightyellow";
label="simulate";
tooltip="package: gitlab.tocraw.com/root/toc_trader/pkg/modules/simulate";
penwidth="0.8";
        
        "gitlab.tocraw.com/root/toc_trader/pkg/modules/simulate.SearchBuyPoint" [ fillcolor="moccasin" label="SearchBuyPoint" penwidth="1.5" ]
        "gitlab.tocraw.com/root/toc_trader/pkg/modules/simulate.GetBalance" [ penwidth="1.5" fillcolor="moccasin" label="GetBalance" ]
        
    }

        subgraph "cluster_gitlab.tocraw.com/root/toc_trader/pkg/modules/streamtickprocess" {
        style="filled";
fontname="Tahoma bold";
rank="sink";
label="streamtickprocess";
tooltip="package: gitlab.tocraw.com/root/toc_trader/pkg/modules/streamtickprocess";
penwidth="0.8";
fontsize="16";
fillcolor="lightyellow";
URL="/?f=gitlab.tocraw.com/root/toc_trader/pkg/modules/streamtickprocess";
        
        "gitlab.tocraw.com/root/toc_trader/pkg/modules/streamtickprocess.TickProcess" [ fillcolor="moccasin" label="TickProcess" penwidth="1.5" ]
        
    }

        subgraph "cluster_gitlab.tocraw.com/root/toc_trader/pkg/modules/tickanalyze" {
        style="filled";
fillcolor="lightyellow";
label="tickanalyze";
URL="/?f=gitlab.tocraw.com/root/toc_trader/pkg/modules/tickanalyze";
tooltip="package: gitlab.tocraw.com/root/toc_trader/pkg/modules/tickanalyze";
penwidth="0.8";
fontsize="16";
fontname="Tahoma bold";
rank="sink";
        
        "gitlab.tocraw.com/root/toc_trader/pkg/modules/tickanalyze.GenerateRSI" [ fillcolor="moccasin" label="GenerateRSI" penwidth="1.5" ]
        
    }

        subgraph "cluster_gitlab.tocraw.com/root/toc_trader/tools/stockutil" {
        tooltip="package: gitlab.tocraw.com/root/toc_trader/tools/stockutil";
penwidth="0.8";
fontsize="16";
fontname="Tahoma bold";
rank="sink";
style="filled";
fillcolor="lightyellow";
label="stockutil";
URL="/?f=gitlab.tocraw.com/root/toc_trader/tools/stockutil";
        
        "gitlab.tocraw.com/root/toc_trader/tools/stockutil.GetNewClose" [ fillcolor="moccasin" label="GetNewClose" penwidth="1.5" ]
        
    }

        subgraph "cluster_math" {
        fontsize="16";
style="filled";
fillcolor="lightyellow";
fontname="Tahoma bold";
rank="sink";
label="math";
URL="/?f=math";
penwidth="0.8";
tooltip="package: math";
        
        "math.Ceil" [ fillcolor="moccasin" label="Ceil" penwidth="1.5" ]
        "math.Floor" [ fillcolor="moccasin" label="Floor" penwidth="1.5" ]
        
    }

        subgraph "cluster_sync" {
        fillcolor="lightyellow";
fontname="Tahoma bold";
rank="sink";
label="sync";
URL="/?f=sync";
tooltip="package: sync";
style="filled";
fontsize="16";
penwidth="0.8";
        
        "(*sync.RWMutex).Lock" [ fillcolor="moccasin" label="(*RWMutex).Lock" penwidth="1.5" ]
        "(*sync.RWMutex).Unlock" [ fillcolor="moccasin" label="(*RWMutex).Unlock" penwidth="1.5" ]
        "(*sync.RWMutex).RLock" [ fillcolor="moccasin" label="(*RWMutex).RLock" penwidth="1.5" ]
        "(*sync.RWMutex).RUnlock" [ fillcolor="moccasin" label="(*RWMutex).RUnlock" penwidth="1.5" ]
        
    }

        subgraph "cluster_time" {
        label="time";
URL="/?f=time";
tooltip="package: time";
style="filled";
fontsize="16";
fillcolor="lightyellow";
fontname="Tahoma bold";
rank="sink";
penwidth="0.8";
        
        "time.Unix" [ fillcolor="moccasin" label="Unix" penwidth="1.5" ]
        "time.Sleep" [ fillcolor="moccasin" label="Sleep" penwidth="1.5" ]
        "(time.Time).Add" [ fillcolor="moccasin" label="(Time).Add" penwidth="1.5" ]
        "time.Now" [ fillcolor="moccasin" label="Now" penwidth="1.5" ]
        "(time.Time).Before" [ penwidth="1.5" fillcolor="moccasin" label="(Time).Before" ]
        "(time.Time).Local" [ fillcolor="moccasin" label="(Time).Local" penwidth="1.5" ]
        "(time.Time).Format" [ label="(Time).Format" penwidth="1.5" fillcolor="moccasin" ]
        "(time.Time).Year" [ penwidth="1.5" fillcolor="moccasin" label="(Time).Year" ]
        "(time.Time).Month" [ fillcolor="moccasin" label="(Time).Month" penwidth="1.5" ]
        "(time.Time).Day" [ fillcolor="moccasin" label="(Time).Day" penwidth="1.5" ]
        "time.Date" [ fillcolor="moccasin" label="Date" penwidth="1.5" ]
        "(time.Time).After" [ fillcolor="moccasin" label="(Time).After" penwidth="1.5" ]
        "time.Tick" [ label="Tick" penwidth="1.5" fillcolor="moccasin" ]
        "(time.Time).IsZero" [ penwidth="1.5" fillcolor="moccasin" label="(Time).IsZero" ]
        
    }

    }

    "(*gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.tradeRecordMutexStruct).Set" -> "(*sync.RWMutex).Lock" [ color="saddlebrown" ]
    "(*gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.tradeRecordMutexStruct).Set" -> "(*sync.RWMutex).Unlock" [ color="saddlebrown" ]
    "gitlab.tocraw.com/root/toc_trader/pkg/handlers/tradebothandler.ManualSellStock" -> "(*gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.tradeRecordMutexStruct).Set" [ color="saddlebrown" ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.BuyBot" -> "(*gitlab.tocraw.com/root/toc_trader/pkg/global.stringStringMutex).GetName" [ color="saddlebrown" ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.BuyBot" -> "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.IsBuyPoint" [  ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.GetStockBuyCost" -> "math.Ceil" [ color="saddlebrown" ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.GetStockBuyCost" -> "math.Floor" [ color="saddlebrown" ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.BuyBot" -> "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.GetStockBuyCost" [  ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.PlaceOrder" -> "errors.New" [ color="saddlebrown" ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.PlaceOrder" -> "(*github.com/go-resty/resty/v2.Client).R" [ color="saddlebrown" ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.PlaceOrder" -> "(*github.com/go-resty/resty/v2.Request).SetBody" [ color="saddlebrown" ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.PlaceOrder" -> "(*github.com/go-resty/resty/v2.Request).SetResult" [ color="saddlebrown" ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.PlaceOrder" -> "(*github.com/go-resty/resty/v2.Request).Post" [ color="saddlebrown" ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.PlaceOrder" -> "(*github.com/go-resty/resty/v2.Response).StatusCode" [ color="saddlebrown" ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.PlaceOrder" -> "(*github.com/go-resty/resty/v2.Response).Result" [ color="saddlebrown" ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.BuyBot" -> "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.PlaceOrder" [  ]
    "(*gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.tradeRecordMutexStruct).CheckStockExist" -> "(*sync.RWMutex).RLock" [ color="saddlebrown" ]
    "(*gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.tradeRecordMutexStruct).CheckStockExist" -> "(*sync.RWMutex).RUnlock" [ color="saddlebrown" ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.BuyBot" -> "(*gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.tradeRecordMutexStruct).CheckStockExist" [  ]
    "(*gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.tradeRecordMutexStruct).GetCount" -> "(*sync.RWMutex).RLock" [ color="saddlebrown" ]
    "(*gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.tradeRecordMutexStruct).GetCount" -> "(*sync.RWMutex).RUnlock" [ color="saddlebrown" ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.BuyBot" -> "(*gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.tradeRecordMutexStruct).GetCount" [  ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.BuyBot" -> "(*github.com/sirupsen/logrus.Logger).WithFields" [ color="saddlebrown" ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.BuyBot" -> "(*github.com/sirupsen/logrus.Entry).Error" [ color="saddlebrown" ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.BuyBot" -> "(*github.com/sirupsen/logrus.Logger).Warn" [ color="saddlebrown" ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.BuyBot" -> "time.Unix" [ color="saddlebrown" ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.BuyBot" -> "(*gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.tradeRecordMutexStruct).Set" [  ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.CheckBuyOrderStatus" -> "time.Sleep" [ color="saddlebrown" ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.CheckBuyOrderStatus" -> "gitlab.tocraw.com/root/toc_trader/pkg/models/traderecord.GetOrderByOrderID" [ color="saddlebrown" ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.CheckBuyOrderStatus" -> "(*github.com/sirupsen/logrus.Logger).Error" [ color="saddlebrown" ]
    "(*gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.tradeRecordMutexStruct).Delete" -> "(*sync.RWMutex).Lock" [ color="saddlebrown" ]
    "(*gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.tradeRecordMutexStruct).Delete" -> "(*sync.RWMutex).Unlock" [ color="saddlebrown" ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.CheckBuyOrderStatus" -> "(*gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.tradeRecordMutexStruct).Delete" [  ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.CheckBuyOrderStatus" -> "(*github.com/sirupsen/logrus.Logger).WithFields" [ color="saddlebrown" ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.CheckBuyOrderStatus" -> "(*github.com/sirupsen/logrus.Entry).Info" [ color="saddlebrown" ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.CheckBuyOrderStatus" -> "(time.Time).Add" [ color="saddlebrown" ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.CheckBuyOrderStatus" -> "time.Now" [ color="saddlebrown" ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.CheckBuyOrderStatus" -> "(time.Time).Before" [ color="saddlebrown" ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.Cancel" -> "errors.New" [ color="saddlebrown" ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.Cancel" -> "(*github.com/go-resty/resty/v2.Client).R" [ color="saddlebrown" ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.Cancel" -> "(*github.com/go-resty/resty/v2.Request).SetBody" [ color="saddlebrown" ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.Cancel" -> "(*github.com/go-resty/resty/v2.Request).SetResult" [ color="saddlebrown" ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.Cancel" -> "(*github.com/go-resty/resty/v2.Request).Post" [ color="saddlebrown" ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.Cancel" -> "(*github.com/go-resty/resty/v2.Response).StatusCode" [ color="saddlebrown" ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.Cancel" -> "(*github.com/go-resty/resty/v2.Response).Result" [ color="saddlebrown" ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.CheckBuyOrderStatus" -> "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.Cancel" [  ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.CheckBuyOrderStatus" -> "(*gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.tradeRecordMutexStruct).Set" [  ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.BuyBot" -> "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.CheckBuyOrderStatus" [ arrowhead="normalnoneodot" ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.BuyBot" -> "(time.Time).Local" [ color="saddlebrown" ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.BuyBot" -> "(time.Time).Format" [ color="saddlebrown" ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.BuyBot" -> "(*github.com/sirupsen/logrus.Entry).Infof" [ color="saddlebrown" ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/streamtickprocess.TickProcess" -> "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.BuyBot" [ arrowhead="normalnoneodot" color="saddlebrown" ]
    "(*gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.tradeRecordMutexStruct).GetOrderID" -> "(*sync.RWMutex).RLock" [ color="saddlebrown" ]
    "(*gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.tradeRecordMutexStruct).GetOrderID" -> "(*sync.RWMutex).RUnlock" [ color="saddlebrown" ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.SellBot" -> "(*gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.tradeRecordMutexStruct).GetOrderID" [  ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.SellBot" -> "gitlab.tocraw.com/root/toc_trader/pkg/models/traderecord.CheckIsFilledByOrderID" [ color="saddlebrown" ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.SellBot" -> "(*github.com/sirupsen/logrus.Logger).Error" [ color="saddlebrown" ]
    "(*gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.tradeRecordMutexStruct).GetClose" -> "(*sync.RWMutex).RLock" [ color="saddlebrown" ]
    "(*gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.tradeRecordMutexStruct).GetClose" -> "(*sync.RWMutex).RUnlock" [ color="saddlebrown" ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.SellBot" -> "(*gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.tradeRecordMutexStruct).GetClose" [  ]
    "(*gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.tradeRecordMutexStruct).GetTradeTime" -> "(*sync.RWMutex).RLock" [ color="saddlebrown" ]
    "(*gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.tradeRecordMutexStruct).GetTradeTime" -> "(*sync.RWMutex).RUnlock" [ color="saddlebrown" ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.SellBot" -> "(*gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.tradeRecordMutexStruct).GetTradeTime" [  ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.GetSellPrice" -> "time.Unix" [ color="saddlebrown" ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.GetSellPrice" -> "(time.Time).Year" [ color="saddlebrown" ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.GetSellPrice" -> "(time.Time).Month" [ color="saddlebrown" ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.GetSellPrice" -> "(time.Time).Day" [ color="saddlebrown" ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.GetSellPrice" -> "time.Date" [ color="saddlebrown" ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.GetSellPrice" -> "gitlab.tocraw.com/root/toc_trader/tools/stockutil.GetNewClose" [ color="saddlebrown" ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.GetSellPrice" -> "(time.Time).Before" [ color="saddlebrown" ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.GetSellPrice" -> "gitlab.tocraw.com/root/toc_trader/pkg/modules/tickanalyze.GenerateRSI" [ color="saddlebrown" ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.GetSellPrice" -> "(time.Time).Add" [ color="saddlebrown" ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.GetSellPrice" -> "(*gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.tradeRecordMutexStruct).GetClose" [  ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.GetSellPrice" -> "(*gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.tradeRecordMutexStruct).CheckStockExist" [  ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.GetSellPrice" -> "(time.Time).After" [ color="saddlebrown" ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.SellBot" -> "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.GetSellPrice" [  ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.SellBot" -> "(*gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.tradeRecordMutexStruct).CheckStockExist" [  ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.SellBot" -> "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.PlaceOrder" [  ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.SellBot" -> "(*github.com/sirupsen/logrus.Logger).WithFields" [ color="saddlebrown" ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.SellBot" -> "(*github.com/sirupsen/logrus.Entry).Error" [ color="saddlebrown" ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.SellBot" -> "(*github.com/sirupsen/logrus.Logger).Warn" [ color="saddlebrown" ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.SellBot" -> "time.Unix" [ color="saddlebrown" ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.SellBot" -> "(*gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.tradeRecordMutexStruct).Set" [  ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.CheckSellOrderStatus" -> "time.Sleep" [ color="saddlebrown" ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.CheckSellOrderStatus" -> "gitlab.tocraw.com/root/toc_trader/pkg/models/traderecord.GetOrderByOrderID" [ color="saddlebrown" ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.CheckSellOrderStatus" -> "(*github.com/sirupsen/logrus.Logger).Error" [ color="saddlebrown" ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.CheckSellOrderStatus" -> "(*gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.tradeRecordMutexStruct).Delete" [  ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.CheckSellOrderStatus" -> "(*github.com/sirupsen/logrus.Logger).WithFields" [ color="saddlebrown" ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.CheckSellOrderStatus" -> "(*github.com/sirupsen/logrus.Entry).Info" [ color="saddlebrown" ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.CheckSellOrderStatus" -> "(time.Time).Add" [ color="saddlebrown" ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.CheckSellOrderStatus" -> "time.Now" [ color="saddlebrown" ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.CheckSellOrderStatus" -> "(time.Time).Before" [ color="saddlebrown" ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.CheckSellOrderStatus" -> "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.Cancel" [  ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.CheckSellOrderStatus" -> "(*gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.tradeRecordMutexStruct).Set" [  ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.CheckSellOrderStatus" -> "(*gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.tradeRecordMutexStruct).CheckStockExist" [  ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.SellBot" -> "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.CheckSellOrderStatus" [ arrowhead="normalnoneodot" ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/streamtickprocess.TickProcess" -> "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.SellBot" [ arrowhead="normalnoneodot" color="saddlebrown" ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/streamtickprocess.TickProcess" -> "(*gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.tradeRecordMutexStruct).CheckStockExist" [ color="saddlebrown" ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/simulate.SearchBuyPoint" -> "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.IsBuyPoint" [ color="saddlebrown" ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/simulate.GetBalance" -> "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.GetSellPrice" [ color="saddlebrown" ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/simulate.GetBalance" -> "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.GetStockBuyCost" [ color="saddlebrown" ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.GetStockSellCost" -> "math.Ceil" [ color="saddlebrown" ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.GetStockSellCost" -> "math.Floor" [ color="saddlebrown" ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/simulate.GetBalance" -> "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.GetStockSellCost" [ color="saddlebrown" ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.ShowStatus" -> "time.Tick" [ color="saddlebrown" ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.ShowStatus" -> "(time.Time).IsZero" [ color="saddlebrown" ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.ShowStatus" -> "(time.Time).Year" [ color="saddlebrown" ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.ShowStatus" -> "(time.Time).Month" [ color="saddlebrown" ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.ShowStatus" -> "(time.Time).Day" [ color="saddlebrown" ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.ShowStatus" -> "time.Date" [ color="saddlebrown" ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.ShowStatus" -> "(*github.com/sirupsen/logrus.Logger).Infof" [ color="saddlebrown" ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.ShowStatus" -> "time.Now" [ color="saddlebrown" ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.ShowStatus" -> "(time.Time).After" [ color="saddlebrown" ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.ShowStatus" -> "(*gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.tradeRecordMutexStruct).GetCount" [  ]
    "(*gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.tradeRecordMutexStruct).GetTotalSellCost" -> "(*sync.RWMutex).RLock" [ color="saddlebrown" ]
    "(*gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.tradeRecordMutexStruct).GetTotalSellCost" -> "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.GetStockSellCost" [  ]
    "(*gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.tradeRecordMutexStruct).GetTotalSellCost" -> "(*sync.RWMutex).RUnlock" [ color="saddlebrown" ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.ShowStatus" -> "(*gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.tradeRecordMutexStruct).GetTotalSellCost" [  ]
    "(*gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.tradeRecordMutexStruct).GetTotalBuyCost" -> "(*sync.RWMutex).RLock" [ color="saddlebrown" ]
    "(*gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.tradeRecordMutexStruct).GetTotalBuyCost" -> "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.GetStockBuyCost" [  ]
    "(*gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.tradeRecordMutexStruct).GetTotalBuyCost" -> "(*sync.RWMutex).RUnlock" [ color="saddlebrown" ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.ShowStatus" -> "(*gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.tradeRecordMutexStruct).GetTotalBuyCost" [  ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.ShowStatus" -> "(*github.com/sirupsen/logrus.Logger).WithFields" [ color="saddlebrown" ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.ShowStatus" -> "(*github.com/sirupsen/logrus.Entry).Info" [ color="saddlebrown" ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.ShowStatus" -> "(time.Time).Format" [ color="saddlebrown" ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.CheckOrderStatusLoop" -> "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.ShowStatus" [ arrowhead="normalnoneodot" ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.CheckOrderStatusLoop" -> "time.Tick" [ color="saddlebrown" ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.FetchOrderStatus" -> "(*github.com/go-resty/resty/v2.Client).R" [ color="saddlebrown" ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.FetchOrderStatus" -> "(*github.com/go-resty/resty/v2.Request).SetResult" [ color="saddlebrown" ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.FetchOrderStatus" -> "(*github.com/go-resty/resty/v2.Request).Get" [ color="saddlebrown" ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.FetchOrderStatus" -> "(*github.com/go-resty/resty/v2.Response).StatusCode" [ color="saddlebrown" ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.FetchOrderStatus" -> "errors.New" [ color="saddlebrown" ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.FetchOrderStatus" -> "(*github.com/go-resty/resty/v2.Response).Result" [ color="saddlebrown" ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.CheckOrderStatusLoop" -> "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.FetchOrderStatus" [  ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.CheckOrderStatusLoop" -> "(*github.com/sirupsen/logrus.Logger).Error" [ color="saddlebrown" ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.InitStartUpQuota" -> "gitlab.tocraw.com/root/toc_trader/pkg/models/traderecord.GetAllorderByDayTime" [ color="saddlebrown" ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.InitStartUpQuota" -> "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.GetStockBuyCost" [  ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.CheckOrderStatusLoop" -> "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.InitStartUpQuota" [  ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.CheckOrderStatusLoop" -> "gitlab.tocraw.com/root/toc_trader/pkg/models/traderecord.GetAllorderByDayTime" [ color="saddlebrown" ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.initBalance" -> "(*gitlab.tocraw.com/root/toc_trader/pkg/global.stringStringMutex).GetName" [ color="saddlebrown" ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.initBalance" -> "time.Now" [ color="saddlebrown" ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.initBalance" -> "(*gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.tradeRecordMutexStruct).Set" [  ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.initBalance" -> "(*github.com/sirupsen/logrus.Logger).WithFields" [ color="saddlebrown" ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.initBalance" -> "(*github.com/sirupsen/logrus.Entry).Warn" [ color="saddlebrown" ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.initBalance" -> "(*gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.tradeRecordMutexStruct).CheckStockExist" [  ]
    "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.CheckOrderStatusLoop" -> "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.initBalance" [  ]
    "gitlab.tocraw.com/root/toc_trader/pkg/core.TradeProcess" -> "gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.CheckOrderStatusLoop" [ color="saddlebrown" arrowhead="normalnoneodot" ]
    "(*gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.tradeRecordMutexStruct).GetAll" -> "(*sync.RWMutex).RLock" [ color="saddlebrown" ]
    "(*gitlab.tocraw.com/root/toc_trader/pkg/modules/tradebot.tradeRecordMutexStruct).GetAll" -> "(*sync.RWMutex).RUnlock" [ color="saddlebrown" ]
}
