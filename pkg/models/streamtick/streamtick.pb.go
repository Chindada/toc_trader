// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.1
// source: trade_bot_protobuf/src/streamtick.proto

package streamtick

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StreamTickProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exchange string                    `protobuf:"bytes,1,opt,name=exchange,proto3" json:"exchange,omitempty"`
	Tick     *StreamTickProto_TickData `protobuf:"bytes,2,opt,name=tick,proto3" json:"tick,omitempty"`
}

func (x *StreamTickProto) Reset() {
	*x = StreamTickProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trade_bot_protobuf_src_streamtick_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamTickProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamTickProto) ProtoMessage() {}

func (x *StreamTickProto) ProtoReflect() protoreflect.Message {
	mi := &file_trade_bot_protobuf_src_streamtick_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamTickProto.ProtoReflect.Descriptor instead.
func (*StreamTickProto) Descriptor() ([]byte, []int) {
	return file_trade_bot_protobuf_src_streamtick_proto_rawDescGZIP(), []int{0}
}

func (x *StreamTickProto) GetExchange() string {
	if x != nil {
		return x.Exchange
	}
	return ""
}

func (x *StreamTickProto) GetTick() *StreamTickProto_TickData {
	if x != nil {
		return x.Tick
	}
	return nil
}

type StreamTickProto_TickData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code            string  `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	DateTime        string  `protobuf:"bytes,2,opt,name=date_time,json=dateTime,proto3" json:"date_time,omitempty"`
	Open            float64 `protobuf:"fixed64,3,opt,name=open,proto3" json:"open,omitempty"`
	AvgPrice        float64 `protobuf:"fixed64,4,opt,name=avg_price,json=avgPrice,proto3" json:"avg_price,omitempty"`
	Close           float64 `protobuf:"fixed64,5,opt,name=close,proto3" json:"close,omitempty"`
	High            float64 `protobuf:"fixed64,6,opt,name=high,proto3" json:"high,omitempty"`
	Low             float64 `protobuf:"fixed64,7,opt,name=low,proto3" json:"low,omitempty"`
	Amount          float64 `protobuf:"fixed64,8,opt,name=amount,proto3" json:"amount,omitempty"`
	TotalAmount     float64 `protobuf:"fixed64,9,opt,name=total_amount,json=totalAmount,proto3" json:"total_amount,omitempty"`
	Volume          int64   `protobuf:"varint,10,opt,name=volume,proto3" json:"volume,omitempty"`
	TotalVolume     int64   `protobuf:"varint,11,opt,name=total_volume,json=totalVolume,proto3" json:"total_volume,omitempty"`
	TickType        int64   `protobuf:"varint,12,opt,name=tick_type,json=tickType,proto3" json:"tick_type,omitempty"`
	ChgType         int64   `protobuf:"varint,13,opt,name=chg_type,json=chgType,proto3" json:"chg_type,omitempty"`
	PriceChg        float64 `protobuf:"fixed64,14,opt,name=price_chg,json=priceChg,proto3" json:"price_chg,omitempty"`
	PctChg          float64 `protobuf:"fixed64,15,opt,name=pct_chg,json=pctChg,proto3" json:"pct_chg,omitempty"`
	BidSideTotalVol int64   `protobuf:"varint,16,opt,name=bid_side_total_vol,json=bidSideTotalVol,proto3" json:"bid_side_total_vol,omitempty"`
	AskSideTotalVol int64   `protobuf:"varint,17,opt,name=ask_side_total_vol,json=askSideTotalVol,proto3" json:"ask_side_total_vol,omitempty"`
	BidSideTotalCnt int64   `protobuf:"varint,18,opt,name=bid_side_total_cnt,json=bidSideTotalCnt,proto3" json:"bid_side_total_cnt,omitempty"`
	AskSideTotalCnt int64   `protobuf:"varint,19,opt,name=ask_side_total_cnt,json=askSideTotalCnt,proto3" json:"ask_side_total_cnt,omitempty"`
	Suspend         int64   `protobuf:"varint,20,opt,name=suspend,proto3" json:"suspend,omitempty"`
	Simtrade        int64   `protobuf:"varint,21,opt,name=simtrade,proto3" json:"simtrade,omitempty"`
}

func (x *StreamTickProto_TickData) Reset() {
	*x = StreamTickProto_TickData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trade_bot_protobuf_src_streamtick_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamTickProto_TickData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamTickProto_TickData) ProtoMessage() {}

func (x *StreamTickProto_TickData) ProtoReflect() protoreflect.Message {
	mi := &file_trade_bot_protobuf_src_streamtick_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamTickProto_TickData.ProtoReflect.Descriptor instead.
func (*StreamTickProto_TickData) Descriptor() ([]byte, []int) {
	return file_trade_bot_protobuf_src_streamtick_proto_rawDescGZIP(), []int{0, 0}
}

func (x *StreamTickProto_TickData) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *StreamTickProto_TickData) GetDateTime() string {
	if x != nil {
		return x.DateTime
	}
	return ""
}

func (x *StreamTickProto_TickData) GetOpen() float64 {
	if x != nil {
		return x.Open
	}
	return 0
}

func (x *StreamTickProto_TickData) GetAvgPrice() float64 {
	if x != nil {
		return x.AvgPrice
	}
	return 0
}

func (x *StreamTickProto_TickData) GetClose() float64 {
	if x != nil {
		return x.Close
	}
	return 0
}

func (x *StreamTickProto_TickData) GetHigh() float64 {
	if x != nil {
		return x.High
	}
	return 0
}

func (x *StreamTickProto_TickData) GetLow() float64 {
	if x != nil {
		return x.Low
	}
	return 0
}

func (x *StreamTickProto_TickData) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *StreamTickProto_TickData) GetTotalAmount() float64 {
	if x != nil {
		return x.TotalAmount
	}
	return 0
}

func (x *StreamTickProto_TickData) GetVolume() int64 {
	if x != nil {
		return x.Volume
	}
	return 0
}

func (x *StreamTickProto_TickData) GetTotalVolume() int64 {
	if x != nil {
		return x.TotalVolume
	}
	return 0
}

func (x *StreamTickProto_TickData) GetTickType() int64 {
	if x != nil {
		return x.TickType
	}
	return 0
}

func (x *StreamTickProto_TickData) GetChgType() int64 {
	if x != nil {
		return x.ChgType
	}
	return 0
}

func (x *StreamTickProto_TickData) GetPriceChg() float64 {
	if x != nil {
		return x.PriceChg
	}
	return 0
}

func (x *StreamTickProto_TickData) GetPctChg() float64 {
	if x != nil {
		return x.PctChg
	}
	return 0
}

func (x *StreamTickProto_TickData) GetBidSideTotalVol() int64 {
	if x != nil {
		return x.BidSideTotalVol
	}
	return 0
}

func (x *StreamTickProto_TickData) GetAskSideTotalVol() int64 {
	if x != nil {
		return x.AskSideTotalVol
	}
	return 0
}

func (x *StreamTickProto_TickData) GetBidSideTotalCnt() int64 {
	if x != nil {
		return x.BidSideTotalCnt
	}
	return 0
}

func (x *StreamTickProto_TickData) GetAskSideTotalCnt() int64 {
	if x != nil {
		return x.AskSideTotalCnt
	}
	return 0
}

func (x *StreamTickProto_TickData) GetSuspend() int64 {
	if x != nil {
		return x.Suspend
	}
	return 0
}

func (x *StreamTickProto_TickData) GetSimtrade() int64 {
	if x != nil {
		return x.Simtrade
	}
	return 0
}

var File_trade_bot_protobuf_src_streamtick_proto protoreflect.FileDescriptor

var file_trade_bot_protobuf_src_streamtick_proto_rawDesc = []byte{
	0x0a, 0x27, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x62, 0x6f, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x72, 0x63, 0x2f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x74,
	0x69, 0x63, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x74, 0x69, 0x63, 0x6b, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x22, 0xe9,
	0x05, 0x0a, 0x0f, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x54, 0x69, 0x63, 0x6b, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x41,
	0x0a, 0x04, 0x74, 0x69, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x74, 0x69, 0x63, 0x6b, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x54, 0x69, 0x63, 0x6b, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x74, 0x69, 0x63,
	0x6b, 0x1a, 0xf6, 0x04, 0x0a, 0x08, 0x54, 0x69, 0x63, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x6f,
	0x70, 0x65, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x76, 0x67, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x61, 0x76, 0x67, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x05, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x69, 0x67, 0x68, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x68, 0x69, 0x67, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6f,
	0x77, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6c, 0x6f, 0x77, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12,
	0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x56, 0x6f, 0x6c, 0x75,
	0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x69, 0x63, 0x6b, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x69, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x19, 0x0a, 0x08, 0x63, 0x68, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x63, 0x68, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x5f, 0x63, 0x68, 0x67, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x43, 0x68, 0x67, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x63, 0x74, 0x5f, 0x63,
	0x68, 0x67, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x70, 0x63, 0x74, 0x43, 0x68, 0x67,
	0x12, 0x2b, 0x0a, 0x12, 0x62, 0x69, 0x64, 0x5f, 0x73, 0x69, 0x64, 0x65, 0x5f, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x76, 0x6f, 0x6c, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x62, 0x69,
	0x64, 0x53, 0x69, 0x64, 0x65, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x56, 0x6f, 0x6c, 0x12, 0x2b, 0x0a,
	0x12, 0x61, 0x73, 0x6b, 0x5f, 0x73, 0x69, 0x64, 0x65, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f,
	0x76, 0x6f, 0x6c, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x61, 0x73, 0x6b, 0x53, 0x69,
	0x64, 0x65, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x56, 0x6f, 0x6c, 0x12, 0x2b, 0x0a, 0x12, 0x62, 0x69,
	0x64, 0x5f, 0x73, 0x69, 0x64, 0x65, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6e, 0x74,
	0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x62, 0x69, 0x64, 0x53, 0x69, 0x64, 0x65, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6e, 0x74, 0x12, 0x2b, 0x0a, 0x12, 0x61, 0x73, 0x6b, 0x5f, 0x73,
	0x69, 0x64, 0x65, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6e, 0x74, 0x18, 0x13, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0f, 0x61, 0x73, 0x6b, 0x53, 0x69, 0x64, 0x65, 0x54, 0x6f, 0x74, 0x61,
	0x6c, 0x43, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x75, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x73, 0x69, 0x6d, 0x74, 0x72, 0x61, 0x64, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x73, 0x69, 0x6d, 0x74, 0x72, 0x61, 0x64, 0x65, 0x42, 0x17, 0x5a, 0x15, 0x70, 0x6b,
	0x67, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x74,
	0x69, 0x63, 0x6b, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_trade_bot_protobuf_src_streamtick_proto_rawDescOnce sync.Once
	file_trade_bot_protobuf_src_streamtick_proto_rawDescData = file_trade_bot_protobuf_src_streamtick_proto_rawDesc
)

func file_trade_bot_protobuf_src_streamtick_proto_rawDescGZIP() []byte {
	file_trade_bot_protobuf_src_streamtick_proto_rawDescOnce.Do(func() {
		file_trade_bot_protobuf_src_streamtick_proto_rawDescData = protoimpl.X.CompressGZIP(file_trade_bot_protobuf_src_streamtick_proto_rawDescData)
	})
	return file_trade_bot_protobuf_src_streamtick_proto_rawDescData
}

var file_trade_bot_protobuf_src_streamtick_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_trade_bot_protobuf_src_streamtick_proto_goTypes = []interface{}{
	(*StreamTickProto)(nil),          // 0: streamtick_protobuf.StreamTickProto
	(*StreamTickProto_TickData)(nil), // 1: streamtick_protobuf.StreamTickProto.TickData
}
var file_trade_bot_protobuf_src_streamtick_proto_depIdxs = []int32{
	1, // 0: streamtick_protobuf.StreamTickProto.tick:type_name -> streamtick_protobuf.StreamTickProto.TickData
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_trade_bot_protobuf_src_streamtick_proto_init() }
func file_trade_bot_protobuf_src_streamtick_proto_init() {
	if File_trade_bot_protobuf_src_streamtick_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_trade_bot_protobuf_src_streamtick_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamTickProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trade_bot_protobuf_src_streamtick_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamTickProto_TickData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_trade_bot_protobuf_src_streamtick_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_trade_bot_protobuf_src_streamtick_proto_goTypes,
		DependencyIndexes: file_trade_bot_protobuf_src_streamtick_proto_depIdxs,
		MessageInfos:      file_trade_bot_protobuf_src_streamtick_proto_msgTypes,
	}.Build()
	File_trade_bot_protobuf_src_streamtick_proto = out.File
	file_trade_bot_protobuf_src_streamtick_proto_rawDesc = nil
	file_trade_bot_protobuf_src_streamtick_proto_goTypes = nil
	file_trade_bot_protobuf_src_streamtick_proto_depIdxs = nil
}
